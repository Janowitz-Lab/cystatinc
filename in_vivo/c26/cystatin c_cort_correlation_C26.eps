%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G103) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 293 199
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 293 199
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: XDTGUI+Arial-BoldMT
%!FontType1-1.0: XDTGUI+Arial-BoldMT 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /XDTGUI+Arial-BoldMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /five put
dup 35 /one put
dup 36 /two put
dup 37 /four put
dup 38 /six put
dup 39 /C put
dup 40 /o put
dup 41 /r put
dup 42 /t put
dup 43 /i put
dup 44 /c put
dup 45 /s put
dup 46 /e put
dup 47 /n put
dup 48 /space put
dup 49 /parenleft put
dup 50 /m put
dup 51 /l put
dup 52 /slash put
dup 53 /L put
dup 54 /parenright put
dup 55 /y put
dup 56 /a put
dup 57 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1286 1 index div -771 2 index div 4096 3 index div 2069 5 -1 roll div]cvx def
/sfnts [<





0B1416342014301440140314B801AB401411111F102F10022F103F104F1003104012163410B802A040130F0F0E040F10E007D8D01701401701171A1F0EB8012140120D7701BCD0000140009F00AF000300191ED3B9014700182B4E10F45D714DEDF4E44E10F65D714DEDF43C003F3C10FD2B5D713C10F65D2BFD2B71E43FFD2B71E45D7111123987052E2B0E7D10C401113900111239111239313001715D1325161633323635342623220727132111210736333200151407062322245B01180C764D587A79617960E49002E7FDEE2C5E62BB0104698FFECBFF0001791D5F6F8F9087876B2102FBFEF9F92FFEF0D9B58EC2DA00020057FFE7042A05C00017002300BD403B6A0B750887089719A705A708A90EAA13B90EB611BD13C011CF130D1505361144107A16B502D210D01407BB00CF0002000401071812101B201B021BB8FFC0401E1216341BA60F0D1F212F2102214012163421A63F09014009D009FF090309B8014FB3AF010101B8012140221F042F0402044012163404A6150501D800771ED84F0C010C1A2518D8121924D3C2182B4E10F44DED4E10F6714DEDF4ED003FFD2B71F45DF65D71ED2B713FED2B7101111239001112395D3130015D005D010526262322060736333212151400232200111000333216011416333236353426232206040FFEF00A5443597B10699CB0FBFEF8CFDEFEE2012AEEA7DBFDA17E514E687054517004531E5450A0FD7CFEF4D4E1FEF00159018901930164BBFCE989957A8B8F857F00010061FFE7055E05D3001A00D6404E8609891489169F009806C709D403D40BF503092509280C280D2914291675057509860508071307171713171729022A03250507280599059709C903C50B053F014F01020152100001E000F0000200B8FFC0B311183400B8FFC0B30A0D3400B8015A4017182D04080E400E12340E4B5F0F014F0F010F401518340FB801284022122D0A030FEF0E5600EF00014F0102011A301C011C1527A007010F071F0730070307B8028CB31B7E53182B4E10F45D714DED4E105DF65D4DEDF4ED003FFDF42B5D71E42B3FFDF42B2B5D71E45D3130005D015D5D5D010506042320001110002120171617052626232206111016333236043F011F42FECDECFEDCFE88017A0134010DA86432FEDB1AA576A3CBC8A076AA021B5BF0E9018F015A016E01959F5EB0467284EAFEFAFEEAEC96000001009D000004A505AE0005003D401A50070102010204032505000804051A0702032001200030000200B8028BB30631B9182B4E10F45D3C4DFD3C4E10FE3C003F3C4DFD3C3F3C3130015D3311211121159D012802E005AEFB49F70000020049FFE8042E043E0023003201714068071A081C051D161A4A1B481C4925DB10DF11093619461957266619672686269219931AA61AB91BC71AC81B0C06060D151606




17B80104B2150114B80274B300150607B80274400E0C0B092F0A2F00002F015F010201B801044028180326171255153F149F14AF1403601480149014D014F0140500141014201430140414191A78A0182B4E10F45D71724BB037534BB03B515A58B90014FFC038593C4DFC3CFD3CF45D3C10F419E400183FED3F3CFD3C10F45D71E411123911330F0F0F0F3130015D0115231114161633323717062322262627263511233533352511027AC00B271C274A18627C4C7A390B098181011A0426E0FE54822B1C1BDA2A335145319501CFE0D3A4FE890001000EFE510452042600130134B41228050113B8FFE040180C0F3408160D0F3407160D0F3406160D0F3405160C0F3402B8FFC0401F1A3A34050606040D0B0E061002001306041302040303010100061360100110B801AF40120B0F0D2F0E280020153015601503F0150115B8FFC0B322263415B8FFC040121C1E341517171A043903401819347F030103B80127400902401819347F020102B801274012013900401C36342000300002001914C4A0182B4E10F45D2B4DFD19F45D2BF45D2B18FD4E456544E62B2B71724D10F4E4003FED5D2F3F3C103C103C0112391139001112391239391139070E103C3130002B012B2B2B2B2B5D4BB010534BB03A515A58B2041000BAFFF00001FFF0B10310013838383859435C58B90005FFE8400E0D113F131013193F131012183F05B8FFF0B313193F05B8FFF0B212183F012B2B2B2B2B59132113132101070E032322272716333236370E012BFEF80123FE89432543577F50514E194235625E190426FD0E02F2FC02B95D623D2211DC0D735900000100BB04A8028005D3000300434013012012153401201E2434500301000310030203B801594009010003E50010020102B80261B7016E001904E67C182B4E10F44DF4ED5D10ED003FED5D713130012B2B13132101BB8A013BFEED04A8012BFED500FFFF009300000258073D0236001100000117001AFFD8016A0016400A02000808010140020108B902340029002B012B35000100000005028F82C220BD5F0F3CF50819080000000000A2E33C1D00000000C3047092FAFAFCFD1000081500010009000100000000000000010000073EFE4E00431000FAFAFA7A100000010000000000000000000000000000001C060001000239000002AA006B02AA00430239FFFD04730056047300A204730033047300260473005B0473005705C7006104E3009D04730049047300550473004104E300540239009302390093071D007E04E3009104E30052031D00870473003002AA001F0473000E02AA00BB02390093000000360036007B00C000EB016D01AE0281030E03C7046104FE052C063306D107D708C50916094C0A260A9B0B130B850D280DB80E770EA80EC0000000010000001C00F2003C008F000600020010002F




69444569447373737473737374737473742B2B2B2B2B2B2B2B2B2B2B2B00737373737373737373737373737373737373737373737474747474747474747474747474747474747474747575757374757575752B7300004BB02A534BB036515A58B1070745B040604459004BB02E534BB036515A58B1030345B0406044B1090945B8FFC06044592B4569440174007373732B4569442B012B435C58400A0006000702A006A00702B9FFC00274B31A1D326FBD0277007F02770002FFC00277B22F3132B9FFC00277B322253240B80274B32F353240B80274B3282A3240B80274B21A2132B8FFC0B3371A1D32B8FFC0B3251A1D32B8FFC040112D1A1D329025902D9037A025A02DA03706B8FFC0B6A61A1D321FA61FB8028EB22FA60300742B732B2B2B2B2B2B2B2B742B737459002B2B435C58B9FFC002A1B21C1D32B9FFC002A0B21C1D322B2B592B73012B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B012B2B2B2B2B2B2B73742B2B2B2B2B2B2B2B73732B2B2B2B2B2B732B732B2B2B742B2B2B73737373732B73732B2B2B732B2B002B2B2B2B7374732B732B2B2B2B752B2B2B2B2B2B2B2B752B2B2B2B2B732B2B2B2B7374752B2B7373732B2B2B732B737374752B2B7374752B2B7374752B2B2B2B2B2B2B2B2B2B2B2B74752B0000
00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/slash 4 def
/zero 5 def
/one 6 def
/two 7 def
/four 8 def
/five 9 def
/six 10 def
/C 11 def
/L 12 def
/a 13 def
/c 14 def
/e 15 def
/g 16 def
/i 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/r 22 def
/s 23 def
/t 24 def
/y 25 def
/acute 26 def
/glyph3380 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1286 -771 4096 2069}def
/UniqueID 4139453 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF8582693491A2FA54E38FF421606FB76E850234B82441BDB94CD1F10A574131DF364AB16907AB60BEE779111BCE3F4D9378411F15F81DFBB525B35930A531036EE24B62F92DCB7A1B9DE249CF55832EA4B7B0A519311D2D6B900B195EBB2CDB269C85A4E89DC9B1885DBCD2E521BE7D953A1AE41DD5110832165DFEA1C8853673EBDE60AB99FFC5263E77DC63286BF22EC2FD6C44EAF56ED903206E5A6CED7FD506BA97A26CF028BABCF81F93F033409BD98D800217C375585C2D18A2A803D30E04DC778AF3B0B5C098A7EB79C0BF26994059FF454B0A776042097427F3431AAD9E58CCED65D3104CD96A509BCAC1683361CB66027C33C024E371EFA5DD7E357BDAD410D7B84515EC9C427DDE2E0FD5DC61BF983BD3BA8D9D27922125D4A92BA01C80A40249C6B7736D8545BC19A919C92FC39A53A25E9602BF486A7A701C02E62D0179CA4FD33CE5D1D00D88DB5A1F4A2ED2EE4BE548E06FAB487110B965A72A56BB35C3EFD6D6BB11156CFA3C781EDC038C99F9911A1108E6255CABE54E88A5E7C2E67C4A12322389B32CDA73CF9106248678E27A77C494E45BFFB8DE84D72C66A9BADA1FD063633B04F8BC15266BB44041899B751624B8613BE8D6578278FBEAF875D875488DFB4CED7B16AFEE88A0A29A472C0F26E3F2FEC9FD2D8563E799ED51C2C36E226E26FF8DFD4306A7AB1AD5BBC9C7C7DE19B4DCAD61926D475BFA8AA7F817541D0118E886116F88B3226051EE1545B7AB68E29AA96550303197187FF5A1FF464BF61C28E7F446F7EAB0C270FCA8C9FCCCCDB
F76D5D869EDD8F61BC40381CF6F81DF127792823B72544D3E50F5D4C3447089431DDAFDC1DFC0900D73366FB538E08BAEFFF1A23D3C7CA92BCEA8E7F9B4203A9DD93BD344939476354E61E1047CD4FA6FC7523BB657192534519481C2C4AEBAD27FA6AD4FB5A600D829024D1773F3EA53A5EF6E1FC17D020B8F9A5AD1991BD795CB7D26B6FB4302704BBED029E2BF6CD7A3D59A71D9D4F5C671F4EA7759E5C3E7FB57B4A45B8D07DBC02D7B346600F065112676B5958B994E29420E158F709AD0793726A1C2F5A4FA38F9C8669A82C7AE643A085C573E00385B1A16AF24AD778A88839AB3E688B682CDCF962D8BC4C9E7DE24792483281CAA7D07FBFB4D8183D54490F1574C53C80B61CCB922871C4EA6D328E4081536B4565ECD1C85A6E2711762B966D67925BFF2CB14CAC02C4EE5B3048B2357F04D085C2276AFCB8D5469C80FF74E9E3EDAD6F198A3B5A4559ECC366276C703A279D7188BDE49958A1F3A2343E09954B1EEC2723EF2BEC38EBA8ECB5CB5ED6C530D92F961B0D09444EEA6B6F9C29181019EEEB01CF2FB5C378B8F00816523CBE2A02C16A24EA1575FEF86A3BE770FF6730853D5841E61337F1AA9A351942CA23BC63396B3B8F87C9F769B943F8BB9E1B03F865C6CAF107180EE170269753A759E4430420D01C95D882DAFB28EC3FE5F5934D5D2E4FC558DBE99BD5E9143B96FE30D60EFD3D56EEFBEED5BAB5B7105E7CCA98A41CB7CD804FC8FE483460C5B8774F3A8BD2901EE189941CA762E62FB52B25C3AB6C0C1C306526735393099CB3896F1FE5B5E85DE2CCABE984C6AA7E2DC3492B6F3303E0098035ABDC2EDE9CACCF9A4851D1D375690284CC2CE2B593CBAFF1A1863247175520B427D0CC4B93C206180A7801BA6A17CBB62D2BE373A96ED602B04510A25E859278B393EE20890C3DA114F544D628982BAC8F0FCBC1626811EDC3930BA321C46CE442B6A0C2C1C2147498BDDAD1C1E32CB2275A498EDDBEA00E3E2DE3B3605398407D557F395B452F329F950B392470E1C06A31A43E6CDD5C3060FB9C2B0911038D0E0D9090AB25864F6AD3EC44E2B767CDC7999E58072620C3F2D0A8ADA6047DCD6BA91D12FCBDA6A34FC403BAE8E2415A67453D788DC3CB52DBFEAA396F5FBCA6801ABB1B72F9576E6F4CD5A0245D8071B501112DDFF525411232C8E06F9A6E6247385EABCDE4331F037D0AC944B494E010BB5C82DC5B260041CC587BA66386F0C60C9F632441CDAB2B11300739B0C103E014B6F2DC3E21DEE149E14D8A8F72079DB2AB9034AECE94928759C8B0FF003BDA2A7CAAA4251D83A12DAB59EAA7B13137D026718C619B877408C2ED72CDC8D74D5BC19E78DEBC55A53901EAEB412E107A3A0427150E0F4EF00ACB130E94F263CC8C4D9BA06F1259DD6A7A4271CD9EC5114D876D13EEFF8473851CA1D24F48129C92
98D01D81FD31CF67140E806C40E3B5A8906188153737696D5388FA36A710ECFBF3AFEB69599AE181EC07A84B003A19E99D093055BCD44241A8A6FF179C6FE0000A7726793B0E96D6EEDED935439A61DA8F340086FC5E684D509D280DDFBB4BAF1BBE6511597EC35EB1483FCDA5079DBC10B2D1DC4566B1E82D5E4293EFDC91566E5B571CD1AEA8A423ED55BF3591DCBB8FD2366999FC517070D053CAFD5DA388CF2DEA950A887D69532E5AB48735FF6CD8AB07BD9A0808D0FD2673F21A272C6EC04EF590DF58560B3660499408FF7AE8F20B0E269B07FC62C1039205CB0C9598F356CBA3EE2E3CD41D36685DC022B8C9D7410CC2CF398CA317AB98DF94DDD1112180D2165D128E87DD5565425CD3EDCB814FDEEBB96964B7BB2DA10451FBB0C1790029344AD6A72AE38D3CBD41AF324195712E5F2F20EA18C5B50FD6F32DD0DCFCFCF2ABFF3C12CA5F2A1EF80406E55444CEB6D98CCB2E93A9FA7E1B3D453E55B3AE333735E1523E3E335035B5522974A327706843683AF6B073A99621B8BED36E3EAF0C1774678B6D9599E40873A2F9A17DB2C36B855ECA64DB36FA9B592FD1AED30296B7328C5F2E96EC1FD9E42A65976A851CD9F6A393FFE467E06A49D1A0AB030399A29884F5DB2C2F0BAD8DFBD67649E09F74A8AEFCB5C6FBCF885D8CF30884004A7FACE8F4FE271B3619A87FDEDBFBA86DA7B3DE7B68CC8C35C49BFE96C8342AD3745BAB48943E9BFA90A36569071ACD48DB726FA0406A000B1358BE5E249341CE280C614EDCA9EDD54A68F9D5375466FA6A449FED8427DA6F31AE8F07D0044F92CD2DB358A9EDC8711A816EA712E4F943BA4404EFEB7194DD14900C9EF08DCCE99E697D863FD11205087496A07F1E484FD0924F19E70E8BBA19BACF10ECD5116845C0854D74EB4CE5903EAD1CAEA47F4C156F5AD1DE36F0006986BEDE84218286AB3CB3093D20CE2D9366B48DFF4B0F6B3C2181D226C0C1F8E0B02743BE41A05D40F1D2F5267F7798CED56A4F02CD95B5BE4C8897047A0F62218A715266F5A5FBF11224C067D944603AEDF1630255CDA9BB6BD8067163E623EB582F1C80A11942DE48CF1E9C3A05EDF9DCA7057C323CF3D5597D89AFC5CED68C28BDCF11E07227B89BBD2FC7B1F34ADCE64EF93A5A6EE86BB8D25AC636C89F2369C53F0107115E6EF51F6A098596BFD14EBF0FB5CAF6BEDB7462AB0E021AADBD90F724B9803E989F324628A90CC4070A23C67F9681794E31E410064F735910653E80A9E1619B2FA4D6EDF3CB726FD4033E4201602C9D405D78FA688DBDE56965A91F422023764DC8E9176E0D49848E307EBB51C60DEBE8CEE502EF4E88835DD16C79A8B0E1C230406A94A7E4A4505AFF55F895C6F03276B464C2521F9ADDABB09B401EEC473C22260DC015FBE644A6743545F3D60CFCECA10523D0BB2D9ABCA8806B5A

0136AD008CD4551C41B899680A7004CEA85965A1F002C8C5DDCFBD0E9DC22A03703F630236BFF5E83C21BA43CD3FCE102D9FE4133D85B6BF0A00426E3E24BC2DCD4F7988C1A9F64E8C18DCB8FFBAAE72EC32D81BAF2921DB958198A92A9F0612731A5FA6C780A42397760997583C6CF344436D3B6DDE7D54E0E7C5F614BD7A45618A316875962E752816B772F2C1D127766038A7E3C1ADCB2C5FAA3125DDCEDC23FEAA069E0AF424D147960270F92B24305E02A7592BD3C34CA93CD357E9CB5A2185B23C6B530EF16C2259A4B2CB1716190B0AEA98F0D3CB6D4A753721A533AF84F9921CB0C122E8F800264E2B9BD6EA5EC34EB3FB78
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/XDTGUI+Arial-BoldMT cguidfix
/F1.1/XDTGUI+Arial-BoldMT renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1.4400001 w
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 292.54001 198.03999 rc
1 0 0 -1 -147.38 509.79999 cm
198 468 m
414 468 l
S
2 J
198 468 m
198 473.39999 l
S
270 468 m
270 473.39999 l
S
342 468 m
342 473.39999 l
S
414 468 m
414 473.39999 l
S
0 i
/F1.1[ 11 0 0 -11 0 0]sf
194.94116 484.84 m
(!)s
260.82349 484.84 m
("!!)[ 6.117676 6.117676 0.000000 ] xS
329.76465 484.84 m
(#!!!)[ 6.117676 6.117676 6.117676 0.000000 ] xS
401.76465 484.84 m
(#"!!)[ 6.117676 6.117676 6.117676 0.000000 ] xS
0 J
0.60000002 i
198 468 m
198 324 l
S
2 J
192.60001 468 m
198 468 l
S
192.60001 420 m
198 420 l
S
192.60001 372 m
198 372 l
S
192.60001 324 m
198 324 l
S
0 i
185.04233 471.82007 m
(!)s
172.80698 423.82007 m
($!!)[ 6.117676 6.117676 0.000000 ] xS
172.80698 375.82007 m
(%!!)[ 6.117676 6.117676 0.000000 ] xS
172.80698 327.82007 m
(&!!)[ 6.117676 6.117676 0.000000 ] xS
Q
0.72000003 w
1 J
1.4267182 M
q
50.259998 186.16 m
266.98001 186.16 l
266.98001 40.84 l
50.259998 40.84 l
h
50.259998 186.16 m
W
0 0 292.54001 198.03999 rc
1 0 0 -1 78.099998 144.52 cm
1.4400001 60 m
1.4400001 60 l
3.24 59.400002 l
4.9200001 58.799999 l
6.7199998 58.200001 l
8.3999996 57.599998 l
10.2 57 l
12 56.52 l
13.68 55.919998 l
15.48 55.32 l
17.16 54.720001 l
18.959999 54.119999 l
20.76 53.52 l
22.440001 52.919998 l
24.24 52.32 l
26.040001 51.84 l
27.719999 51.240002 l
29.52 50.639999 l
31.200001 50.040001 l
33 49.439999 l
34.799999 48.84 l
36.48 48.240002 l
38.279999 47.639999 l
39.959999 47.16 l
41.759998 46.560001 l
43.560001 45.959999 l
45.240002 45.360001 l
47.040001 44.759998 l
48.84 44.16 l
50.52 43.560001 l
52.32 42.959999 l
54 42.48 l
55.799999 41.880001 l
57.599998 41.279999 l
59.279999 40.68 l
61.080002 40.080002 l
62.759998 39.48 l
64.559998 38.880001 l
66.360001 38.279999 l
68.040001 37.799999 l
69.839996 37.200001 l
71.519997 36.599998 l
73.32 36 l
75.120003 35.400002 l
76.800003 34.799999 l
78.599998 34.200001 l
80.400002 33.599998 l
82.080002 33.119999 l
83.879997 32.52 l
85.559998 31.92 l
87.360001 31.32 l
89.160004 30.719999 l
90.839996 30.120001 l
92.639999 29.52 l
94.32 28.92 l
96.120003 28.440001 l
97.919998 27.84 l
99.599998 27.24 l
101.4 26.639999 l
103.08 26.040001 l
104.88 25.440001 l
106.68 24.84 l
108.36 24.24 l
110.16 23.639999 l
111.96 23.16 l
113.64 22.559999 l
115.44 21.959999 l
117.12 21.360001 l
118.92 20.76 l
120.72 20.16 l
122.4 19.559999 l
124.2 18.959999 l
125.88 18.48 l
127.68 17.879999 l
129.48 17.280001 l
131.16 16.68 l
132.96001 16.08 l
134.75999 15.48 l
136.44 14.88 l
138.24001 14.28 l
139.92 13.8 l
141.72 13.2 l
143.52 12.6 l
145.2 12 l
147 11.4 l
148.67999 10.8 l
150.48 10.2 l
152.28 9.6000004 l
153.96001 9.1199999 l
155.75999 8.5200005 l
157.44 7.9200001 l
159.24001 7.3200002 l
161.03999 6.7199998 l
162.72 6.1199999 l
164.52 5.52 l
166.32001 4.9200001 l
168 4.4400001 l
169.8 3.8399999 l
171.48 3.24 l
173.28 2.6400001 l
175.08 2.04 l
176.75999 1.4400001 l
S
Q
q
0 0 292.54001 198.03999 rc
131.13647 75.75647 m
132.26118 74.63176 132.26118 72.808243 131.13647 71.683533 c
130.01176 70.558823 128.18825 70.558823 127.06353 71.683533 c
125.93882 72.808243 125.93882 74.63176 127.06353 75.75647 c
128.18825 76.88118 130.01176 76.88118 131.13647 75.75647 c
f
81.576469 120.27647 m
82.70118 119.15176 82.70118 117.32824 81.576469 116.20353 c
80.451759 115.07882 78.628242 115.07882 77.503532 116.20353 c
76.378822 117.32824 76.378822 119.15176 77.503532 120.27647 c
78.628242 121.40118 80.451759 121.40118 81.576469 120.27647 c
f
93.576469 66.516464 m
94.70118 65.391754 94.70118 63.568241 93.576469 62.443531 c
92.451759 61.318821 90.628242 61.318821 89.503532 62.443531 c
88.378822 63.568241 88.378822 65.391754 89.503532 66.516464 c
90.628242 67.641174 92.451759 67.641174 93.576469 66.516464 c
f
95.25647 94.956467 m
96.38118 93.831757 96.38118 92.00824 95.25647 90.88353 c
94.13176 89.75882 92.308243 89.75882 91.183533 90.88353 c
90.058823 92.00824 90.058823 93.831757 91.183533 94.956467 c
92.308243 96.081177 94.13176 96.081177 95.25647 94.956467 c
f
204.69647 108.99647 m
205.82118 107.87176 205.82118 106.04824 204.69647 104.92353 c
203.57176 103.79882 201.74825 103.79882 200.62354 104.92353 c
199.49883 106.04824 199.49883 107.87176 200.62354 108.99647 c
201.74825 110.12118 203.57176 110.12118 204.69647 108.99647 c
f
199.77647 103.59647 m
200.90118 102.47176 200.90118 100.64824 199.77647 99.523529 c
198.65176 98.398819 196.82825 98.398819 195.70354 99.523529 c
194.57883 100.64824 194.57883 102.47176 195.70354 103.59647 c
196.82825 104.72118 198.65176 104.72118 199.77647 103.59647 c
f
215.49646 168.51646 m
216.62117 167.39175 216.62117 165.56824 215.49646 164.44353 c
214.37177 163.31882 212.54825 163.31882 211.42354 164.44353 c
210.29883 165.56824 210.29883 167.39175 211.42354 168.51646 c
212.54825 169.64117 214.37177 169.64117 215.49646 168.51646 c
f
235.41647 130.95647 m
236.54118 129.83176 236.54118 128.00824 235.41647 126.88353 c
234.29176 125.75882 232.46825 125.75882 231.34354 126.88353 c
230.21883 128.00824 230.21883 129.83176 231.34354 130.95647 c
232.46825 132.08118 234.29176 132.08118 235.41647 130.95647 c
f
111.33646 103.95647 m
112.46117 102.83176 112.46117 101.00824 111.33646 99.88353 c
110.21175 98.75882 108.38824 98.75882 107.26353 99.88353 c
106.13882 101.00824 106.13882 102.83176 107.26353 103.95647 c
108.38824 105.08118 110.21175 105.08118 111.33646 103.95647 c
f
220.41647 100.95647 m
221.54118 99.831757 221.54118 98.00824 220.41647 96.88353 c
219.29176 95.75882 217.46825 95.75882 216.34354 96.88353 c
215.21883 98.00824 215.21883 99.831757 216.34354 100.95647 c
217.46825 102.08118 219.29176 102.08118 220.41647 100.95647 c
f
242.13647 143.31647 m
243.26118 142.19176 243.26118 140.36824 242.13647 139.24353 c
241.01176 138.11882 239.18825 138.11882 238.06354 139.24353 c
236.93883 140.36824 236.93883 142.19176 238.06354 143.31647 c
239.18825 144.44118 241.01176 144.44118 242.13647 143.31647 c
f
162.57646 118.59647 m
163.70117 117.47176 163.70117 115.64824 162.57646 114.52353 c
161.45175 113.39882 159.62823 113.39882 158.50354 114.52353 c
157.37883 115.64824 157.37883 117.47176 158.50354 118.59647 c
159.62823 119.72118 161.45175 119.72118 162.57646 118.59647 c
f
256.89645 174.99646 m
258.02118 173.87177 258.02118 172.04825 256.89645 170.92354 c
255.77176 169.79883 253.94824 169.79883 252.82353 170.92354 c
251.69882 172.04825 251.69882 173.87177 252.82353 174.99646 c
253.94824 176.12117 255.77176 176.12117 256.89645 174.99646 c
f
142.05647 117.99647 m
143.18118 116.87176 143.18118 115.04824 142.05647 113.92353 c
140.93176 112.79882 139.10825 112.79882 137.98354 113.92353 c
136.85883 115.04824 136.85883 116.87176 137.98354 117.99647 c
139.10825 119.12118 140.93176 119.12118 142.05647 117.99647 c
f
0 i
1 0 0 -1 -147.38 509.79999 cm
/F1.1[ 11 0 0 -11 0 0]sf
246.02577 502.48007 m
('\(\)*+,\(-*.\)\(/.01/2\(3456)[ 7.743848 6.519238 4.080762 3.463086 2.856152 5.917676 6.519238 5.917676 3.463086 5.917676 4.080762 6.519238 6.519238 5.917676 2.856152 3.463086 6.519238 9.580762 6.519238 2.856152 2.856152 6.519238 0.000000 ] xS
0 1 1 0 -383.95999 -45.860001 cm
/F1.1[ 12 0 0 -12 0 0]sf
108.00797 399.92371 m
('7-*8*+/0'01/94256)[ 8.466016 6.473828 6.473828 3.796094 6.473828 3.796094 3.133984 7.130078 3.133984 8.466016 3.133984 3.796094 7.130078 7.130078 3.133984 10.469922 7.130078 0.000000 ] xS
ep
end
%%Trailer
%%EOF
